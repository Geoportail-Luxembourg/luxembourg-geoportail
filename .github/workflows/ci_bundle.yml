name: CI_package
on:
  push:
    tags:
      - '*'
jobs:
  lux-package:
    runs-on: ubuntu-latest
    steps:
      - name: create release
        id: create_release
        uses: octokit/request-action@v2.x
        with:
          # secrets.GITHUB_TOKEN is a secret only valid for one CI execution
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          route: POST /repos/{owner}/{repo}/releases
          owner: 'Geoportail-Luxembourg'
          repo: 'luxembourg-geoportail'
          tag_name: ${{ github.ref }}
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'
      - run: npm ci
      - name: Build prod library
        shell: bash
        run: npm run build:lib:prod

      - name: manually create npm package
        run: |
          tar --transform="s|bundle|package/bundle|" -rvf luxembourg-geoportail-0.0.0-dev.tar bundle
          tar --transform="s|src/bundle/package_without_deps|package/package|" -rvf luxembourg-geoportail-0.0.0-dev.tar src/bundle/package_without_deps.json
          tar --transform="s|README.md|package/README.md|" -rvf luxembourg-geoportail-0.0.0-dev.tar README.md
          tar --transform="s|LICENSE|package/LICENSE|" -rvf luxembourg-geoportail-0.0.0-dev.tar LICENSE
          gzip luxembourg-geoportail-0.0.0-dev.tar

      - name: upload manually
        run: 'curl -X POST "https://uploads.github.com/repos/$owner/$repo/releases/$id/assets?name=luxembourg-geoportail-0.0.0-dev.tar.gz" --header "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -H "Content-Type: application/octet-stream" --data-binary "@luxembourg-geoportail-0.0.0-dev.tar.gz"'
        env:
          owner: 'Geoportail-Luxembourg'
          repo: 'luxembourg-geoportail'
          id: ${{ fromJSON(steps.create_release.outputs.data).id }}
